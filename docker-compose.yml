version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: puabo-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: puabo-os
    volumes:
      - mongodb_data:/data/db
      - ./docker-init:/docker-entrypoint-initdb.d
    networks:
      - puabo-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: puabo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - puabo-network

  # PUABO OS Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: puabo-backend
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      DATABASE_URL: mongodb://admin:password123@mongodb:27017/puabo-os?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      FRONTEND_URL: http://localhost:3000
      ADMIN_URL: http://localhost:3001
    volumes:
      - ./uploads:/app/packages/backend/uploads
      - ./logs:/app/packages/backend/logs
      - ./streams:/app/packages/backend/streams
    depends_on:
      - mongodb
      - redis
    networks:
      - puabo-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: puabo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - puabo-network

  # RTMP Streaming Server (for live streaming)
  rtmp-server:
    image: tiangolo/nginx-rtmp
    container_name: puabo-rtmp
    restart: unless-stopped
    ports:
      - "1935:1935"
      - "8080:80"
    volumes:
      - ./rtmp.conf:/etc/nginx/nginx.conf:ro
      - ./streams:/var/recordings
    networks:
      - puabo-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  puabo-network:
    driver: bridge